{"ast":null,"code":"var _jsxFileName = \"/Users/getugebre/Flatiron/code/PHASE5/REACT/CHALLENGES/module-4-practice-woof-woof/src/components/dogsList.js\";\nimport React from 'react';\nimport Dog from './dog';\nimport { connect } from 'react-redux';\nimport { addDogs } from '../actions/addDogs';\n\nclass DogsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDogs = () => {\n      return this.props.dogs.map(dog => React.createElement(Dog, {\n        key: dog.id,\n        dog: dog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    };\n\n    this.filteredDogs = filterOn => {\n      console.log(filterOn);\n      return this.props.dogs.filter(dog => dog.isGoodDog === filterOn).map(dog => React.createElement(Dog, {\n        key: dog.id,\n        dog: dog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/pups').then(resp => resp.json()).then(dogs => this.props.addDogs(dogs));\n  }\n\n  render() {\n    // console.log()\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.filter === null ? this.renderDogs() : this.filteredDogs(this.props.filter));\n  }\n\n}\n\nconst mSTP = state => {\n  return {\n    dogs: state.dogs,\n    filter: state.filter\n  };\n};\n\nconst mDTP = dispatch => {\n  return {\n    addDogs: dogs => dispatch(addDogs(dogs))\n  };\n};\n\nexport default connect(mSTP, mDTP)(DogsList);","map":{"version":3,"sources":["/Users/getugebre/Flatiron/code/PHASE5/REACT/CHALLENGES/module-4-practice-woof-woof/src/components/dogsList.js"],"names":["React","Dog","connect","addDogs","DogsList","Component","renderDogs","props","dogs","map","dog","id","filteredDogs","filterOn","console","log","filter","isGoodDog","componentDidMount","fetch","then","resp","json","render","mSTP","state","mDTP","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOnCC,UAPmC,GAOtB,MAAM;AACf,aAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,GAAG,IAAI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAkB,QAAA,GAAG,EAAED,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,CAAP;AACH,KATkC;;AAAA,SAWnCE,YAXmC,GAWnBC,QAAD,IAAc;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAO,KAAKN,KAAL,CAAWC,IAAX,CAAgBQ,MAAhB,CAAuBN,GAAG,IAAIA,GAAG,CAACO,SAAJ,KAAkBJ,QAAhD,EAA0DJ,GAA1D,CAA8DC,GAAG,IAAI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAkB,QAAA,GAAG,EAAED,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArE,CAAP;AACH,KAdkC;AAAA;;AAEnCQ,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUZ,IAAI,IAAI,KAAKD,KAAL,CAAWJ,OAAX,CAAmBK,IAAnB,CAFlB;AAGH;;AASDe,EAAAA,MAAM,GAAG;AACL;AACA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKhB,KAAL,CAAWS,MAAX,KAAsB,IAAtB,GAEM,KAAKV,UAAL,EAFN,GAIM,KAAKM,YAAL,CAAkB,KAAKL,KAAL,CAAWS,MAA7B,CALZ,CADJ;AAWH;;AA5BkC;;AA8BvC,MAAMQ,IAAI,GAAGC,KAAK,IAAI;AAClB,SAAO;AACHjB,IAAAA,IAAI,EAAEiB,KAAK,CAACjB,IADT;AAEHQ,IAAAA,MAAM,EAAES,KAAK,CAACT;AAFX,GAAP;AAIH,CALD;;AAMA,MAAMU,IAAI,GAAGC,QAAQ,IAAI;AACrB,SAAO;AACHxB,IAAAA,OAAO,EAAEK,IAAI,IAAImB,QAAQ,CAACxB,OAAO,CAACK,IAAD,CAAR;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACsB,IAAD,EAAOE,IAAP,CAAP,CAAoBtB,QAApB,CAAf","sourcesContent":["import React from 'react' \nimport Dog from './dog'\nimport { connect } from 'react-redux'\nimport { addDogs } from '../actions/addDogs'\n\nclass DogsList extends React.Component {\n    \n    componentDidMount(){\n        fetch('http://localhost:3000/pups')\n            .then(resp => resp.json())\n            .then(dogs => this.props.addDogs(dogs))\n    }\n    renderDogs = () => {\n        return this.props.dogs.map(dog => <Dog key={dog.id} dog={dog} />)\n    }\n\n    filteredDogs = (filterOn) => {\n        console.log(filterOn)\n        return this.props.dogs.filter(dog => dog.isGoodDog === filterOn).map(dog => <Dog key={dog.id} dog={dog} />)\n    }\n    render() {\n        // console.log()\n        return(\n            <React.Fragment>\n                { this.props.filter === null \n                        ?\n                        this.renderDogs()\n                        :\n                        this.filteredDogs(this.props.filter)\n                }\n                {/* {this.renderDogs()} */}\n            </React.Fragment>\n        )\n    }\n}\nconst mSTP = state => {\n    return {\n        dogs: state.dogs,\n        filter: state.filter\n    }\n}\nconst mDTP = dispatch => {\n    return {\n        addDogs: dogs => dispatch(addDogs(dogs))\n    }\n}\n\nexport default connect(mSTP, mDTP)(DogsList) "]},"metadata":{},"sourceType":"module"}